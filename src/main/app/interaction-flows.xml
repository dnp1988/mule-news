<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd">
    <flow name="interaction.creation" doc:name="interaction.creation">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" doc:name="HTTP" path="interaction"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties['http.method'] == 'POST']">
                <logger message="JSON received from post interaction is: #[payload]" level="INFO" doc:name="Logger"/>
                <message-properties-transformer scope="invocation" doc:name="Message Properties">
                    <add-message-property key="newsId" value="#[json:newsId]"/>
                    <add-message-property key="studioId" value="#[json:studioId]"/>
                    <add-message-property key="type" value="#[json:type]"/>
                </message-properties-transformer>
                <jdbc-ee:outbound-endpoint exchange-pattern="request-response"  queryTimeout="-1" doc:name="createInteraction" queryKey="createInteraction" connector-ref="Database">
                	<jdbc-ee:query key="createInteraction" value="INSERT INTO interactions (newsId,studioId,type) VALUES(#[newsId],#[studioId],#[type])"></jdbc-ee:query>
                </jdbc-ee:outbound-endpoint>	
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            </when>
            <when expression="#[message.inboundProperties['http.method'] == 'GET']">
                <logger message="Message received for get interaction is: #[payload]" level="INFO" doc:name="Logger"/>
                <message-properties-transformer scope="invocation" doc:name="Message Properties">
                    <add-message-property key="month" value="#[message.inboundProperties['month']]"/>
                    <add-message-property key="studioId" value="#[message.inboundProperties['studioId']]"/>
            	</message-properties-transformer>
                <choice doc:name="Choice">
                    <when expression="flowVars['studioId'] != null and flowVars['month'] == null">
                        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="getInteractionByStudioId" queryTimeout="-1" connector-ref="Database" doc:name="getInteractionByStudioId">
                            <jdbc-ee:query key="getInteractionByStudioId" value="SELECT * from interactions where studioId = #[studioId]"/>
                        </jdbc-ee:outbound-endpoint>
                    </when>
                    <when expression="flowVars['studioId'] != null and flowVars['month'] != null">
                        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="getInteractionByStudioIdAndMonth" queryTimeout="-1" connector-ref="Database" doc:name="getInteractionByStudioIdAndMonth">
                            <jdbc-ee:query key="getInteractionByStudioIdAndMonth" value="SELECT * from interactions where studioId = #[studioId] and month(createdAt) = #[month]"/>
                        </jdbc-ee:outbound-endpoint>
                    </when>
                    <when expression="flowVars['studioId'] == null and flowVars['month'] != null">
                        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="getInteractionByMonth" queryTimeout="-1" connector-ref="Database" doc:name="getInteractionByMonth">
                            <jdbc-ee:query key="getInteractionByMonth" value="SELECT * from interactions where month(createdAt) = #[month]"/>
                        </jdbc-ee:outbound-endpoint>
                    </when>
                    <otherwise>
                    	<jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="getAllInteractions" queryTimeout="-1" connector-ref="Database" doc:name="getAllInteractions">
                            <jdbc-ee:query key="getAllInteractions" value="SELECT * from interactions"/>
                        </jdbc-ee:outbound-endpoint>
                    </otherwise>
                </choice>
                <logger message="Message received: #[payload]" level="INFO" doc:name="Logger"/>
                <scripting:transformer doc:name="Convert timestamp to string">
                    <scripting:script engine="Groovy"><![CDATA[payload = payload.collect{ it.put('createdAt', it['createdAt'].toString().substring(0, '2013-08-03 12:00:00'.length())); it }
					payload]]></scripting:script>
                </scripting:transformer>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Payload is #[payload]" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
</mule>
